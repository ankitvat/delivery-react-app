{"version":3,"sources":["helpers/utils.js","api/misc.js","images/logo.webp","components/Traceability.js"],"names":["API_URL","getCookies","cookies","document","cookie","split","data","forEach","values","request","config","axios","accessToken","userAccessToken","defaults","headers","common","initRequestAuthHeader","getReport","type","report_date","moment","format","url","method","Traceability","props","update","state","milk_type","setState","loading","then","res","report","catch","err","error","response","gotoPreviousDay","subtract","gotoNextDay","add","aflatoxin","antibiotics1","antibiotics2","antibiotics3","bmc_dispatch","bmc_receive","fat","id","mbrt","pdf_url","ph","plant_dispatch","plant_receive","snf","sodium_content","whs_dispatch","whs_receive","search","this","location","URLSearchParams","get","className","src","logo","alt","width","Typography","variant","Divider","style","justifyContent","IconButton","onClick","border","disabled","endOf","flexGrow","paddingRight","paddingLeft","Button","fullWidth","height","startOf","Loading","marginTop","interval","title","subtitle","Component"],"mappings":"qHAAA,0FAEaA,EAAU,qCAQhB,SAASC,IACd,IACIC,EADIC,SAASC,OACDC,MAAM,KAClBC,EAAO,GAKX,OAJAJ,EAAQK,SAAQ,SAAAH,GACd,IAAII,EAASJ,EAAOC,MAAM,KAC1BC,EAAKE,EAAO,IAAMA,EAAO,MAEpBF,EAOsBL,IAAa,gBAQrC,SAASQ,EAAQC,GACtB,OAAOC,IAAMF,QAAQC,IAPhB,WACL,IAP4BE,EAOxBC,EAAkBZ,IAAa,gBAC/BY,IARwBD,EAQcC,EAP1CF,IAAMG,SAASC,QAAQC,OAAO,gBAAkBJ,GASlDK,I,iCC/BA,iEAGO,SAASC,IAAqE,IAA3DC,EAA0D,uDAAnD,KAAMC,EAA6C,uDAA/BC,MAASC,OAAO,cACnEF,EAAcC,IAAOD,GAAaE,OAAO,cACzC,IAAIC,EAAG,UAAMvB,IAAN,uCAA4CoB,EAA5C,iBAAgED,GACvE,OAAOV,YAAQ,CACbc,IAAKA,EACLC,OAAQ,MACRT,QAAS,CACP,eAAgB,wB,gHCVP,MAA0B,kC,6HCcnCU,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA2BRC,OAAS,WAAO,IAAD,EAEkB,EAAKC,MAA/BC,EAFQ,EAERA,UAAWT,EAFH,EAEGA,YAChB,EAAKU,SAAS,CACZC,SAAS,IAEXb,YAAUW,EAAWT,GACpBY,MAAK,SAAAC,GACJ,EAAKL,MAAM,CACTM,OAAQD,EAAI3B,KACZyB,SAAS,OAGZI,OAAM,SAAAC,GACL,EAAKN,SAAS,CACZO,MAAOD,EAAIE,SAAWF,EAAIE,SAAShC,KAAO,qBAC1CyB,SAAS,QA5CI,EA6DnBQ,gBAAkB,WAAO,IAClBnB,EAAe,EAAKQ,MAApBR,YACL,EAAKU,SAAS,CACZV,YAAaC,IAAOD,GAAaoB,SAAS,EAAG,SAC5C,kBAAM,EAAKb,aAjEG,EAmEnBc,YAAc,WAAO,IACdrB,EAAe,EAAKQ,MAApBR,YACL,EAAKU,SAAS,CACZV,YAAaC,IAAOD,GAAasB,IAAI,EAAG,SACvC,kBAAM,EAAKf,aArEd,EAAKC,MAAQ,CACXR,YAAaC,MAASC,OAAO,cAC7BO,UAAW,KACXK,OAAQ,CACNS,WAAW,EACXC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,aAAc,2BACdC,YAAa,2BACbC,IAAK,EACLC,GAAI,GACJC,KAAM,GACNtB,UAAW,KACXuB,QAAS,8FACTC,GAAI,EACJC,eAAgB,2BAChBC,cAAe,2BACfnC,YAAa,2BACboC,IAAK,EACLC,eAAgB,IAChBC,aAAc,2BACdC,YAAa,6BAxBA,E,gEAgDE,IAAD,OAEbC,EADcC,KAAKnC,MAAjBoC,SACFF,OAED/B,GADJ+B,EAAS,IAAIG,gBAAgBH,IACNI,IAAI,cAAgB,KACvC5C,EAAcwC,EAAOI,IAAI,gBAAkB3C,MAASC,OAAO,cAE/DuC,KAAK/B,SAAS,CACZD,YACAT,gBACC,kBAAM,EAAKO,c,+BAeN,IAAD,EACgDkC,KAAKjC,MAAvDG,EADE,EACFA,QAASG,EADP,EACOA,OAAQd,EADf,EACeA,YADf,EAC4BS,UAD5B,EACuCQ,MAC9C,OACE,eAAC,WAAD,WACE,sBAAKa,GAAG,QAAQe,UAAU,cAA1B,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,OAAOI,MAAM,QAElD,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAEF,cAACC,EAAA,EAAD,IACA,sBAAKP,UAAU,YAAYQ,MAAO,CAACC,eAAgB,gBAAnD,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,QAASf,KAAKtB,gBACdkC,MAAO,CAACI,OAAQ,iCAChBC,SAAUzD,IAAOD,IAAgBC,IAAO,cAAc0D,MAAM,OAH9D,SAKE,cAAC,IAAD,QAGJ,qBAAKd,UAAU,sBAAsBQ,MAAO,CAACO,SAAU,GAAKC,aAAc,GAAIC,YAAa,IAA3F,SACE,cAACC,EAAA,EAAD,CAAQZ,QAAQ,WAAWa,WAAS,EAACX,MAAO,CAACY,OAAQ,IAArD,SACGhE,IAAOD,GAAaE,OAAO,mBAGhC,8BACE,cAACqD,EAAA,EAAD,CACEC,QAASf,KAAKpB,YACdgC,MAAO,CAACI,OAAQ,iCAChBC,SAAUzD,IAAOD,IAAgBC,MAASiE,QAAQ,OAHpD,SAKE,cAAC,IAAD,WAIN,cAACd,EAAA,EAAD,IAEEzC,EACA,8BACE,cAACwD,EAAA,EAAD,MAEF,qBAAKd,MAAO,CAACe,UAAW,IAAxB,SACE,eAAC,WAAD,WACE,cAAC,QAAD,CAAOC,SAAUpE,IAAOa,EAAOc,aAAa1B,OAAO,uBAAwBoE,MAAO,MAAOC,SAAU,kCACnG,cAAC,QAAD,CAAOF,SAAUpE,IAAOa,EAAOa,cAAczB,OAAO,uBAAwBoE,MAAO,MAAOC,SAAU,4BACpG,cAAC,QAAD,CAAOF,SAAUpE,IAAOa,EAAOqB,eAAejC,OAAO,uBAAwBoE,MAAO,QAASC,SAAU,oCACvG,cAAC,QAAD,CAAOF,SAAUpE,IAAOa,EAAOoB,gBAAgBhC,OAAO,uBAAwBoE,MAAO,QAASC,SAAU,8BACxG,cAAC,QAAD,CAAOF,SAAUpE,IAAOa,EAAOyB,aAAarC,OAAO,uBAAwBoE,MAAO,YAAaC,SAAU,wCACzG,cAAC,QAAD,CAAOF,SAAUpE,IAAOa,EAAOwB,cAAcpC,OAAO,uBAAwBoE,MAAO,YAAaC,SAAU,8C,GA1H7FC,aAoIZnE","file":"static/js/12.9c1549a2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_URL = 'https://api.deliver.go4life.in/api';\r\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\n// export const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(';'); \r\n  let data = {};\r\n  cookies.forEach(cookie => {\r\n    let values = cookie.split('=');\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction setRequestAuthHeader(accessToken) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-auth-token\"];\r\n\r\nexport function initRequestAuthHeader() {\r\n  let userAccessToken = getCookies()[\"x-auth-token\"];\r\n  if (userAccessToken) setRequestAuthHeader(userAccessToken);\r\n}\r\ninitRequestAuthHeader();\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n","import {API_URL , request} from '../helpers/utils';\r\nimport moment from 'moment';\r\n\r\nexport function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\r\n  report_date = moment(report_date).format('YYYY-MM-DD');\r\n  let url = `${API_URL}/misc/getReport?report_date=${report_date}&type=${type}`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","export default __webpack_public_path__ + \"static/media/logo.06af865d.webp\";","import React, { Component, Fragment } from \"react\";\r\nimport logo from '../images/logo.webp';\r\nimport \"../css/trace.scss\";\r\nimport { Timeline, Event } from \"react-timeline-scribble\";\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\nimport {getReport} from '../api/misc';\r\nimport moment from 'moment-timezone';\r\nimport Loading from './Loading';\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nclass Traceability extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      report_date: moment().format('YYYY-MM-DD'),\r\n      milk_type: 'a2',\r\n      report: {\r\n        aflatoxin: false,\r\n        antibiotics1: false,\r\n        antibiotics2: false,\r\n        antibiotics3: false,\r\n        bmc_dispatch: \"2021-01-21T00:00:00.000Z\",\r\n        bmc_receive: \"2021-01-21T00:00:00.000Z\",\r\n        fat: 4,\r\n        id: 13,\r\n        mbrt: 40,\r\n        milk_type: \"a2\",\r\n        pdf_url: \"https://saleor-go4life-production.s3.ap-south-1.amazonaws.com/milk-report/a2-2021-01-22.pdf\",\r\n        ph: 7,\r\n        plant_dispatch: \"2021-01-21T00:00:00.000Z\",\r\n        plant_receive: \"2021-01-21T00:00:00.000Z\",\r\n        report_date: \"2021-01-22T00:00:00.000Z\",\r\n        snf: 9,\r\n        sodium_content: 496,\r\n        whs_dispatch: \"2021-01-21T00:00:00.000Z\",\r\n        whs_receive: \"2021-01-21T00:00:00.000Z\",\r\n      }\r\n    }\r\n  }\r\n  update = () => {\r\n    \r\n    let {milk_type, report_date} = this.state;\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    getReport(milk_type, report_date)\r\n    .then(res => {\r\n      this.state({\r\n        report: res.data,\r\n        loading: false\r\n      });\r\n    })\r\n    .catch(err => {\r\n      this.setState({\r\n        error: err.response ? err.response.data : \"Some error occured\",\r\n        loading: false\r\n      });\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    const {location} = this.props;\r\n    let {search} = location;\r\n    search = new URLSearchParams(search);\r\n    let milk_type = search.get('milk_type') || 'a2';\r\n    let report_date = search.get('report_date') || moment().format('YYYY-MM-YY');\r\n\r\n    this.setState({\r\n      milk_type, \r\n      report_date\r\n    }, () => this.update());\r\n\r\n  }\r\n  gotoPreviousDay = () => {\r\n    let {report_date} = this.state;\r\n    this.setState({\r\n      report_date: moment(report_date).subtract(1, 'day')\r\n    }, () => this.update());\r\n  }\r\n  gotoNextDay = () => {\r\n    let {report_date} = this.state;\r\n    this.setState({\r\n      report_date: moment(report_date).add(1, 'day')\r\n    }, () => this.update());\r\n  }\r\n  render() {\r\n    let {loading, report, report_date, milk_type, error} = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div id=\"trace\" className=\"flex middle\">\r\n          <img src={logo} alt=\"logo\" className=\"logo\" width=\"20%\" />\r\n          {/* <h1 className=\"heading\">Trace Your Milk</h1> */}\r\n          <Typography variant=\"h4\">Trace Your Milk</Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"flex p-10\" style={{justifyContent: 'space-around'}}>\r\n          <div>\r\n            <IconButton \r\n              onClick={this.gotoPreviousDay}\r\n              style={{border: '1px solid rgba(0, 0, 0, 0.23)'}} \r\n              disabled={moment(report_date) <= moment('2021-01-15').endOf('day')}\r\n            >\r\n              <ArrowLeft />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"flex center middle \" style={{flexGrow: 0.5, paddingRight: 10, paddingLeft: 10}}>\r\n            <Button variant=\"outlined\" fullWidth style={{height: 50}}>\r\n              {moment(report_date).format('DD MMM YYYY')}\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <IconButton \r\n              onClick={this.gotoNextDay}\r\n              style={{border: '1px solid rgba(0, 0, 0, 0.23)'}} \r\n              disabled={moment(report_date) >= moment().startOf('day')}\r\n            >\r\n              <ArrowRight />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        {\r\n          loading ?\r\n          <div>\r\n            <Loading />\r\n          </div> :\r\n          <div style={{marginTop: 10}}>\r\n            <Timeline>\r\n              <Event interval={moment(report.bmc_receive).format('DD MMM YYYY hh:mm A')} title={\"BMC\"} subtitle={\"Your milk arrived at the BMC.\"} />\r\n              <Event interval={moment(report.bmc_dispatch).format('DD MMM YYYY hh:mm A')} title={\"BMC\"} subtitle={\"Your milk left the BMC.\"} />\r\n              <Event interval={moment(report.plant_receive).format('DD MMM YYYY hh:mm A')} title={\"Plant\"} subtitle={\"Your milk arrived at the Plant.\"} />\r\n              <Event interval={moment(report.plant_dispatch).format('DD MMM YYYY hh:mm A')} title={\"Plant\"} subtitle={\"Your milk left the Plant.\"} />\r\n              <Event interval={moment(report.whs_receive).format('DD MMM YYYY hh:mm A')} title={\"Warehouse\"} subtitle={\"Your milk arrived at the warehouse.\"} />\r\n              <Event interval={moment(report.whs_dispatch).format('DD MMM YYYY hh:mm A')} title={\"Warehouse\"} subtitle={\"Your milk left the warehouse.\"} />\r\n            </Timeline>\r\n          </div>\r\n        }\r\n        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Traceability;\r\n\r\n// http://localhost:3000/#/trace?milk_type=a2&report_date=2021-01-22"],"sourceRoot":""}