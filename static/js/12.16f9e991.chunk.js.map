{"version":3,"sources":["actions/admin.actions.js","api/admin.js","helpers/utils.js","components/AdminNavbar.js","components/AdminLogin.js","containers/Admin.jsx"],"names":["updateAdmin","admin","type","UPDATE_ADMIN","payload","updateAdminData","data","UPDATE_ADMIN_DATA","updateOrdersData","UPDATE_ORDERS_DATA","getAllOrders","url","API_URL","request","method","headers","getDeliveryBoysData","assignDrivers","login","getCookies","cookies","document","cookie","split","forEach","values","config","axios","accessToken","userAccessToken","defaults","common","initRequestAuthHeader","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","getTitle","location","pathname","withRouter","connect","state","setAdmin","dispatch","onUpdateAdmin","props","classes","className","AppBar","position","color","Toolbar","Typography","variant","to","Button","onClick","Divider","LoginAdmin","username","password","handleSubmit","then","res","this","style","display","justifyContent","alignItems","background","height","Card","minWidth","CardHeader","CardContent","marginBottom","TextField","autoFocus","fullWidth","label","value","onChange","e","setState","target","Component","CustomerSheet","lazy","ProductSheet","OrderManagement","AdminRouter","onUpdateOrdersData","onUpdateAdminData","deliveryBoysData","deliveryBoys","Map","person","set","id","orders","console","log","AdminNavbar","fallback","Loading","exact","path","component"],"mappings":"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","file":"static/js/12.16f9e991.chunk.js","sourcesContent":["import {UPDATE_ADMIN, UPDATE_ORDERS_DATA, UPDATE_ADMIN_DATA} from '../constants/index';\r\n\r\nexport const updateAdmin = (admin) => ({\r\n  type: UPDATE_ADMIN,\r\n  payload: admin\r\n});\r\n\r\nexport const updateAdminData = (data) => ({\r\n  type: UPDATE_ADMIN_DATA,\r\n  payload: data\r\n});\r\n\r\nexport const updateOrdersData = (data) => ({\r\n  type: UPDATE_ORDERS_DATA,\r\n  payload: data\r\n});","import {API_URL , request} from '../helpers/utils';\r\n\r\nexport function getAllOrders() {\r\n  let url = `${API_URL}/order/getAllOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDeliveryBoysData() {\r\n  let url = `${API_URL}/order/getDeliveryBoysData`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function assignDrivers(data) {\r\n  let url = `${API_URL}/order/assignDrivers`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/admin/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}","import axios from \"axios\";\r\n\r\n// export const API_URL = 'http://api.deliver.go4life.in/api';\r\n// export const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\nexport const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(';'); \r\n  let data = {};\r\n  cookies.forEach(cookie => {\r\n    let values = cookie.split('=');\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction setRequestAuthHeader(accessToken) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-auth-token\"];\r\n\r\nexport function initRequestAuthHeader() {\r\n  let userAccessToken = getCookies()[\"x-auth-token\"];\r\n  if (userAccessToken) setRequestAuthHeader(userAccessToken);\r\n}\r\ninitRequestAuthHeader();\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {updateAdmin} from '../actions/admin.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction getTitle(location) {\r\n  switch (location.pathname) {\r\n    case '/admin/product':\r\n      return 'Product Sheet';\r\n    case '/admin/manageOrders':\r\n      return 'Manage Orders';\r\n    default:\r\n      return 'Customer Sheet';\r\n  }\r\n}\r\n\r\nfunction MenuAppBar(props) {\r\n  const classes = useStyles();\r\n  const { location} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            {getTitle(location)}\r\n          </Typography>\r\n          \r\n          <div>\r\n            <Link to=\"/admin/customer\" className=\"nav-link\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Customer Sheet\r\n              </Button>\r\n            </Link>\r\n            \r\n            <Link to=\"/admin/product\" className=\"nav-link\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Product Sheet\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to=\"/admin/manageOrders\" className=\"nav-link\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n              >\r\n                Manage Orders\r\n              </Button>\r\n            </Link>\r\n\r\n            <span className=\"nav-link\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  let {onUpdateAdmin} = props;\r\n                  onUpdateAdmin(null);\r\n                }}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </span>\r\n            \r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuAppBar));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\r\n\r\nimport {login} from '../api/admin';\r\nimport {updateAdmin} from '../actions/admin.actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateAdmin: (admin) => dispatch(updateAdmin(admin))\r\n  };\r\n}\r\n\r\nclass LoginAdmin extends Component {\r\n  state = {\r\n    username: 'umakant',\r\n    password: 'pass'\r\n  }\r\n  handleSubmit = () => {\r\n    let {username, password} = this.state;\r\n    let {onUpdateAdmin} = this.props;\r\n    login({username, password})\r\n    .then(res => {\r\n      onUpdateAdmin(res.data);\r\n    })\r\n    // .catch(err => alert(\"Please check username and password\"));\r\n  }\r\n  render() {\r\n    let {username, password} = this.state;\r\n    return (\r\n      <div \r\n        style={{\r\n          display: \"flex\", \r\n          justifyContent: 'center', \r\n          alignItems: 'center',\r\n          background: 'grey',\r\n          height: '100vh'\r\n        }}\r\n      >\r\n        <Card style={{minWidth: 300}}>\r\n          <CardHeader title=\"Admin Login\" />\r\n          <Divider />\r\n          <CardContent>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                autoFocus\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                value={username}\r\n                onChange={(e) => this.setState({username: e.target.value})}\r\n              />\r\n            </div>\r\n            <div style={{marginBottom: 10}}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(e) => this.setState({password: e.target.value})}\r\n              />\r\n            </div>\r\n            <div >\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n            \r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n          <div>\r\n            <Link to=\"/\">\r\n              Login as Driver\r\n            </Link>\r\n          </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginAdmin);","import React, { Suspense,  Component, lazy} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Loading from '../components/Loading';\r\nimport {getAllOrders, getDeliveryBoysData} from '../api/admin';\r\nimport {updateOrdersData, updateAdminData} from '../actions/admin.actions';\r\nimport AdminNavbar from \"../components/AdminNavbar\";\r\nimport LoginAdmin from '../components/AdminLogin';\r\n\r\nconst CustomerSheet = lazy(() => import('../components/CustomerSheet'));\r\nconst ProductSheet = lazy(() => import('../components/ProductSheet'));\r\nconst OrderManagement = lazy(() => import('../components/OrderManagement'));\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data)),\r\n    onUpdateAdminData: (data) => dispatch(updateAdminData(data))\r\n  };\r\n}\r\n\r\nclass AdminRouter extends Component {\r\n  componentDidMount() {\r\n\r\n    let {onUpdateOrdersData, onUpdateAdminData} = this.props;\r\n\r\n    getDeliveryBoysData()\r\n    .then(res => {\r\n      let deliveryBoysData = res.data;\r\n      let deliveryBoys = new Map();\r\n\r\n      deliveryBoysData.forEach(person => {\r\n        deliveryBoys.set(person.id, person);\r\n      })\r\n      onUpdateAdminData({deliveryBoys});\r\n    })\r\n\r\n    getAllOrders()\r\n    .then(res => {\r\n      let orders = res.data;\r\n      onUpdateOrdersData(orders);\r\n    })\r\n  }\r\n  render() {\r\n    console.log(\"Render admin\");\r\n    const {admin} = this.props;\r\n    return (\r\n      <div>\r\n        \r\n        {admin ?\r\n          <div>\r\n            <AdminNavbar />\r\n              <Suspense fallback={<Loading />}>\r\n                <Switch>\r\n                  <Route \r\n                    exact\r\n                    path=\"/admin/product\"\r\n                    component={ProductSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/manageOrders\"\r\n                    exact\r\n                    component={OrderManagement} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin/customer\"\r\n                    exact\r\n                    component={CustomerSheet} \r\n                  />\r\n                  <Route \r\n                    path=\"/admin\"\r\n                    component={CustomerSheet} \r\n                  />\r\n                </Switch>\r\n              </Suspense>\r\n          </div>\r\n          :\r\n          <LoginAdmin />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AdminRouter);"],"sourceRoot":""}