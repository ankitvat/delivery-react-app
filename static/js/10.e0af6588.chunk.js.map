{"version":3,"sources":["helpers/utils.js","api/driver.js","components/WebCam.js","components/OrderDeliveryForm.js"],"names":["API_URL","getCookies","cookies","document","cookie","split","data","forEach","values","request","config","axios","accessToken","userAccessToken","defaults","headers","common","initRequestAuthHeader","getMyOrders","driverId","url","method","submitOrderDelivery","formData","post","videoConstraints","facingMode","WebcamCapture","onCapture","image","React","useState","takingPhoto","setTakingPhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","style","background","position","audio","width","height","ref","screenshotFormat","bottom","display","justifyContent","IconButton","onClick","color","src","alt","tutorialSteps","label","Transition","forwardRef","props","Slide","direction","OrderDeliveryForm","handleNext","setState","state","activeStep","handleBack","DeliveryType","Typography","variant","FormControl","component","RadioGroup","aria-label","name","value","delivery_type","onChange","event","target","FormControlLabel","control","Radio","DeliveryPhoto","className","WebCam","delivery_img","CompleteDelivery","complete_delivery","BoxNumbers","Slider","valueLabelDisplay","step","marks","min","max","boxes","onChangeCommitted","MilkPackets","defaultValue","milk_packets","Review","history","match","driver","params","order_id","parseInt","orderId","Card","mapDeliveryType","Divider","mapCompleteDelivery","Button","photoBlob","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","dataURItoBlob","FormData","append","id","then","res","push","catch","err","alert","message","this","orders","customers","window","location","order","find","item","customer","get","customer_id","console","log","Dialog","fullScreen","open","TransitionComponent","AppBar","Toolbar","edge","goBack","marginTop","padding","MobileStepper","steps","nextButton","size","disabled","maxSteps","backButton","Component","withRouter","connect","setDriver"],"mappings":"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","file":"static/js/10.e0af6588.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// export const API_URL = 'http://api.deliver.go4life.in/api';\r\nexport const API_URL = 'https://go4life-deliver.herokuapp.com/api';\r\n// export const API_URL = 'http://localhost:5000/api';\r\n// export const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = 'http://192.168.0.103:5000/api';\r\n\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(';'); \r\n  let data = {};\r\n  cookies.forEach(cookie => {\r\n    let values = cookie.split('=');\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction setRequestAuthHeader(accessToken) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-auth-token\"];\r\n\r\nexport function initRequestAuthHeader() {\r\n  let userAccessToken = getCookies()[\"x-auth-token\"];\r\n  if (userAccessToken) setRequestAuthHeader(userAccessToken);\r\n}\r\ninitRequestAuthHeader();\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n","import {API_URL , request} from '../helpers/utils';\r\nimport axios, { post } from 'axios';\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/driver/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getMyOrders(driverId) {\r\n  let url = `${API_URL}/driver/${driverId}/getMyOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function confirmDelivery(data) {\r\n  let url = `${API_URL}/order/confirmDelivery`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function submitOrderDelivery(formData) {\r\n  let url = `${API_URL}/driver/submitOrderDelivery`;\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n  return post(url, formData, config);\r\n}","import React from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CameraIcon from '@material-ui/icons/Camera';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nconst videoConstraints = {\r\n  // width: 1280,\r\n  // height: 720,\r\n  facingMode: \"user\"\r\n};\r\n \r\nconst WebcamCapture = ({onCapture, image}) => {\r\n  const [takingPhoto, setTakingPhoto] = React.useState(image ? false : true);\r\n  const webcamRef = React.useRef(null);\r\n \r\n  const capture = React.useCallback(\r\n    () => {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      onCapture(imageSrc);\r\n      setTakingPhoto(false);\r\n    },\r\n    [webcamRef, onCapture]\r\n  );\r\n \r\n  return (\r\n    <div style={{background: '#000'}}>\r\n      {takingPhoto ?\r\n        <div style={{position: 'relative'}}>\r\n          <Webcam\r\n            audio={false}\r\n            width={282}\r\n            height={500}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            videoConstraints={videoConstraints}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={capture}>\r\n              <CameraIcon style={{color: 'white'}} />\r\n            </IconButton>\r\n          </div>\r\n        </div>:\r\n        <div style={{\r\n          position: 'relative'\r\n        }}>\r\n          <img \r\n            src={image} \r\n            alt=\"order_photo\"\r\n            width={282}\r\n          />\r\n          <div style={{\r\n            position: 'absolute', \r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            width: '100%'\r\n          }}>\r\n            <IconButton onClick={() => setTakingPhoto(true)}>\r\n              <ReplayIcon style={{color: 'white'}} /> \r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;","import React from 'react';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport WebCam from \"./WebCam\";\r\nimport {submitOrderDelivery} from '../api/driver';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी'\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n  },\r\n  {\r\n    label: 'Boxes - कितने डब्बे डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Milk Packets - कितने दूध के पैकेट डिलीवर करे',\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें'\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  var byteString = atob(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to an ArrayBuffer\r\n  var ab = new ArrayBuffer(byteString.length);\r\n  var ia = new Uint8Array(ab);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  //Old Code\r\n  //write the ArrayBuffer to a blob, and you're done\r\n  //var bb = new BlobBuilder();\r\n  //bb.append(ab);\r\n  //return bb.getBlob(mimeString);\r\n\r\n  //New Code\r\n  return new Blob([ab], {type: mimeString});\r\n}\r\n\r\nclass OrderDeliveryForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      delivery_type: null,\r\n      delivery_img: null,\r\n      complete_delivery: null,\r\n      milk_packets: 0,\r\n      boxes: 0\r\n    }\r\n  }\r\n  handleNext = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n  handleBack = () => {\r\n    this.setState((state) => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n  DeliveryType = () => {\r\n    const onChange = (event) => {\r\n      this.setState({\r\n        delivery_type: event.target.value\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\" value={this.state.delivery_type} onChange={onChange}>\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n  DeliveryPhoto = () => {\r\n    const onCapture = (image) => {\r\n      // console.log(image)\r\n      this.setState({\r\n        delivery_img: image\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h4\" ></Typography>\r\n        <div className=\"flex center\" >\r\n          <WebCam \r\n            onCapture={onCapture} \r\n            image={this.state.delivery_img}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  CompleteDelivery = () => {\r\n    \r\n    const onChange = (event) => {\r\n      this.setState({\r\n        complete_delivery: event.target.value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\" value={this.state.complete_delivery} onChange={onChange}>\r\n            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n            <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n  BoxNumbers = () => {\r\n    const onChange = (event, value) => {\r\n      this.setState({\r\n        boxes: value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <Slider\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          max={12}\r\n          value={this.state.boxes}\r\n          onChangeCommitted={onChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  MilkPackets = () => {\r\n    const onChange = (event, value) => {\r\n      this.setState({\r\n        milk_packets: value\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <Slider\r\n          defaultValue={0}\r\n          valueLabelDisplay=\"auto\"\r\n          step={1}\r\n          marks\r\n          min={0}\r\n          value={this.state.milk_packets}\r\n          onChangeCommitted={onChange}\r\n          max={12}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  Review = () => {\r\n    const {delivery_type, delivery_img, complete_delivery, boxes, milk_packets} = this.state;\r\n\r\n    const {history, match, driver} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n\r\n    const onSubmit = () => {\r\n      const photoBlob = dataURItoBlob(delivery_img);\r\n      const formData = new FormData();\r\n      formData.append(\"delivery_img\", photoBlob);\r\n      formData.append(\"order_id\", order_id);\r\n      formData.append(\"driver_id\", driver.id);\r\n      formData.append(\"delivery_type\", delivery_type);\r\n      formData.append(\"complete_delivery\", complete_delivery);\r\n      formData.append(\"boxes\", boxes);\r\n      formData.append(\"milk_packets\", milk_packets);\r\n      submitOrderDelivery(formData)\r\n      .then(res => {\r\n        history.push('/');\r\n      })\r\n      .catch(err => {\r\n        alert(err.message);\r\n      })\r\n\r\n    }\r\n    function mapDeliveryType(delivery_type) {\r\n      switch (delivery_type) {\r\n        \r\n        case \"in_hand\":\r\n          return \"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\"\r\n        case \"doorstep\":\r\n          return \"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\"\r\n        case \"society_guard\":\r\n          return \"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\"\r\n        case \"tower_guard\":\r\n          return \"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\"\r\n        case \"order_cancelled\":\r\n          return \"Order Cancelled - आर्डर कैंसिल\"\r\n        default:\r\n          return <span style={{color: 'red'}}>Select Delivery Type - डिलीवरी कहाँ करी</span>;\r\n      }\r\n    }\r\n    function mapCompleteDelivery(complete_delivery) {\r\n      switch (complete_delivery) {\r\n        \r\n        case \"yes\":\r\n          return \"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\"\r\n        case \"no\":\r\n          return \"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\"\r\n        default:\r\n          return <span style={{color: 'red'}}>Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</span>;\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"pv-10\">\r\n        <Card variant=\"outlined\">\r\n          \r\n          <div className=\"p-10\">\r\n              <Typography variant=\"body\">Select Delivery Type - डिलीवरी कहाँ करी</Typography>\r\n              <Typography variant=\"h6\">\r\n                {mapDeliveryType(delivery_type)}\r\n              </Typography>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"p-10\">\r\n            <Typography variant=\"body\">Take Photo - आर्डर की फोटो लीजिये</Typography>\r\n            {\r\n              delivery_img ?\r\n              <div>\r\n                <img alt=\"order\" src={delivery_img} width={300} /> \r\n              </div> :\r\n              <Typography variant=\"h6\"><span style={{color: 'red'}}>Please take picture</span></Typography>\r\n            }\r\n          </div>\r\n          <Divider />\r\n          <div className=\"p-10\">\r\n          <Typography variant=\"body\">Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?</Typography>\r\n            <Typography variant=\"h6\">\r\n              {mapCompleteDelivery(complete_delivery)}\r\n            </Typography>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"p-10\">\r\n          <Typography variant=\"body\">Boxes - कितने डब्बे डिलीवर करे</Typography>\r\n            <Typography variant=\"h6\">{boxes}</Typography>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"p-10\">\r\n          <Typography variant=\"body\">Milk Packets - कितने दूध के पैकेट डिलीवर करे</Typography>\r\n            <Typography variant=\"h6\">{milk_packets}</Typography>\r\n          </div>\r\n        </Card>\r\n        <div className=\"pv-10\">\r\n          <Button\r\n            onClick={onSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    \r\n    const {history, match, orders, customers} = this.props;\r\n    const {params} = match;\r\n    let order_id = parseInt(params.orderId);\r\n    if(!orders) {\r\n      window.location = '/';\r\n    }\r\n    let order = orders.find((item) => item.order_id === order_id);\r\n    let customer = customers.get(order.customer_id);\r\n\r\n    if(!customer) {\r\n      console.log(order);\r\n      window.location = '/';\r\n    }\r\n\r\n    const {activeStep} = this.state;\r\n    const maxSteps = 6;\r\n    // console.log(this.state);\r\n    return (\r\n      <div >\r\n        <Dialog \r\n          fullScreen \r\n          open\r\n          TransitionComponent={Transition}\r\n        >\r\n        <AppBar\r\n          position=\"fixed\"\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                history.goBack();\r\n              }} \r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              {customer.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{marginTop: 60, padding: 10}}>\r\n          <Typography variant=\"h4\" >\r\n            {tutorialSteps[activeStep].label}\r\n          </Typography>\r\n          <Divider />\r\n          {\r\n            activeStep === 0 &&\r\n            <this.DeliveryType />\r\n          }\r\n          \r\n          {\r\n            activeStep === 1 &&\r\n            <this.DeliveryPhoto />\r\n          }\r\n          {\r\n            activeStep === 2 &&\r\n            <this.CompleteDelivery />\r\n          }\r\n          {\r\n            activeStep === 3 &&\r\n            <this.BoxNumbers />\r\n          }\r\n          {\r\n            activeStep === 4 &&\r\n            <this.MilkPackets />\r\n          }\r\n          {\r\n            activeStep === 5 &&\r\n            <this.Review />\r\n          }\r\n        </div>\r\n        <MobileStepper\r\n          steps={maxSteps}\r\n          position=\"bottom\"\r\n          variant=\"progress\"\r\n          activeStep={activeStep}\r\n          color=\"default\"\r\n          nextButton={\r\n            <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n              <KeyboardArrowRight />\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n              <KeyboardArrowLeft />\r\n              Previous\r\n            </Button>\r\n          }\r\n        />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n"],"sourceRoot":""}