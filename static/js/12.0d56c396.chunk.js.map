{"version":3,"sources":["helpers/exportCSV.js","../node_modules/@material-ui/icons/CloudDownload.js","components/ProductSheet.jsx"],"names":["downloadCSV","array","filename","link","document","createElement","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","d","CustomerSheet","props","columns","name","selector","sortable","cell","idx","crates","unit","product","style","width","textAlign","id","map","crate","crateId","total","quantity","className","toString","exportData","productsCollection","data","Array","from","values","productItem","product_id","i","exportCSV","Date","toLocaleDateString","state","loading","this","customers","actions","onClick","startIcon","color","variant","Component","connect","setAdmin"],"mappings":"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","file":"static/js/12.0d56c396.chunk.js","sourcesContent":["function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\n\r\nexport default downloadCSV;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from \"react-data-table-component\";\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport Loading from './Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nclass CustomerSheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n  }\r\n  columns = [\r\n    {\r\n      name: 'Product',\r\n      selector: 'product',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Crates',\r\n      sortable: false,\r\n      cell: (row, idx) => {\r\n        const {crates, unit, product} = row;\r\n\r\n        return (\r\n          <table style={{width: '100%', textAlign: 'left'}} id=\"customer-sheet-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Crate</th>\r\n              <th >Total</th>\r\n              <th >Qty</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n              crates.map(crate => {\r\n                const {crateId, total, quantity} = crate;\r\n                return (\r\n                  <tr key={product + crateId.toString()}>\r\n                    <td className=\"fixed-width-column\">{crateId}</td>\r\n                    <td className=\"fixed-width-column\">{total} {unit}</td>\r\n                    <td className=\"fixed-width-column\">{quantity}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n  exportData = () => {\r\n    let { productsCollection} = this.props;\r\n    \r\n    let data = Array.from(productsCollection.values());\r\n\r\n    let rows = [\r\n      ['Product Id', 'Product', 'Crate', 'Total', 'Qty'],\r\n    ];\r\n    data.forEach(productItem => {\r\n      const {crates, unit, product, product_id} = productItem;\r\n      crates.forEach((crate, i) => {\r\n        const {crateId, total, quantity} = crate;\r\n        let row = ['', '', crateId, `${total} ${unit}`, quantity];\r\n        if(i === 0) {\r\n          row = [product_id, product, crateId, `${total} ${unit}`, quantity];\r\n        }\r\n        rows.push(row);\r\n      });\r\n    });\r\n    exportCSV(rows, `Product Sheet - ${new Date().toLocaleDateString()}.csv`);\r\n  }\r\n  render() {\r\n    let loading = true;\r\n\r\n    let {customers, productsCollection} = this.props;\r\n    \r\n    let data = [];\r\n    if(customers) {\r\n      loading = false;\r\n      data = Array.from(productsCollection.values());\r\n      // data = data.filter(customer => (customer.onlyDairy === false))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            loading?\r\n            <Loading /> :\r\n            <div>\r\n              {/* <div className=\"p-10\">\r\n                \r\n              </div> */}\r\n              <DataTable\r\n                data={data}\r\n                columns={this.columns}\r\n                actions={\r\n                  <Button \r\n                    onClick={this.exportData}\r\n                    startIcon={<DownloadIcon />}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Download Excel\r\n                  </Button>\r\n                }\r\n                // onSelectedRowsChange={this.updateState}\r\n                // selectableRows\r\n              />\r\n            </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(CustomerSheet);"],"sourceRoot":""}