{"version":3,"sources":["components/ReportForm.js","components/AddReport.js","api/misc.js"],"names":["ReportForm","props","onSubmit","e","preventDefault","data","FormData","target","onChange","setState","name","value","onDateTimeChange","onFileChange","pdf","state","report_date","moment","format","milk_type","ph","snf","fat","sodium_content","mbrt","antibiotics1","antibiotics2","antibiotics3","aflatoxin","bmc_receive","subtract","bmc_dispatch","add","plant_receive","plant_dispatch","whs_receive","whs_dispatch","this","loading","filename","path","split","length","console","log","id","className","Grid","container","justify","spacing","item","xs","sm","md","lg","FormControl","fullWidth","TextField","label","type","InputLabel","Select","labelId","MenuItem","required","FormControlLabel","control","Switch","disabled","checked","color","htmlFor","Button","variant","startIcon","CircularProgress","size","Component","AddReport","addReport","then","res","alert","catch","err","response","status","report","url","API_URL","request","method","headers","getReport","Box","m","Typography","connect"],"mappings":"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","file":"static/js/16.db4fca56.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {FormControl, Grid, Select, TextField, Switch, FormControlLabel, CircularProgress, Button } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport UploadIcon from '@material-ui/icons/CloudUpload';\r\nimport moment from 'moment';\r\n\r\nclass ReportForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      report_date: moment().format('YYYY-MM-DD'),\r\n      milk_type: 'a2',\r\n      ph: 7,\r\n      snf: 9,\r\n      fat: 4,\r\n      sodium_content: 496,\r\n      mbrt: 40,\r\n      antibiotics1: false,\r\n      antibiotics2: false,\r\n      antibiotics3: false,\r\n      aflatoxin: false,\r\n      // bmc_receive: null,\r\n      // bmc_dispatch: null,\r\n      // plant_receive: null,\r\n      // plant_dispatch: null,\r\n      // whs_receive: null,\r\n      // whs_dispatch: null,\r\n      pdf: null,\r\n      bmc_receive: moment().subtract(2, 'day').format('YYYY-MM-DDTHH:MM'),\r\n      bmc_dispatch: moment().subtract(2, 'day').add(4, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      plant_receive: moment().subtract(1, 'day').format('YYYY-MM-DDTHH:MM'),\r\n      plant_dispatch: moment().subtract(1, 'day').add(2, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      whs_receive: moment().subtract(10, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n      whs_dispatch: moment().subtract(8, 'hour').format('YYYY-MM-DDTHH:MM'),\r\n    }\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const {onSubmit} = this.props;\r\n    onSubmit(data);\r\n\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  \r\n  onDateTimeChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n  onFileChange = (e) => {\r\n    this.setState({\r\n      pdf: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const {\r\n      report_date, \r\n      milk_type,\r\n      ph,\r\n      snf,\r\n      fat,\r\n      sodium_content,\r\n      mbrt,\r\n      antibiotics1,\r\n      antibiotics2,\r\n      antibiotics3,\r\n      aflatoxin,\r\n      bmc_receive,\r\n      bmc_dispatch,\r\n      plant_receive,\r\n      plant_dispatch,\r\n      whs_receive,\r\n      whs_dispatch,\r\n      pdf\r\n    } = this.state;\r\n    \r\n    const {loading} = this.props;\r\n    let filename = null;\r\n    if(pdf) {\r\n      let path = pdf.split(\"\\\\\");\r\n      filename = path[path.length - 1];\r\n    }\r\n\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div id=\"report-form\" className=\"flex column middle\">\r\n        <form id=\"milk-report-form\" onSubmit={this.onSubmit}>\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Report Date *\"\r\n                type=\"date\"\r\n                value={report_date}\r\n                name=\"report_date\"\r\n                onChange={this.onDateTimeChange}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"milk_type\">Milk Type *</InputLabel>\r\n              <Select\r\n                labelId=\"milk_type\"\r\n                fullWidth\r\n                name=\"milk_type\"\r\n                value={milk_type}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    milk_type: e.target.value\r\n                  })\r\n                }}\r\n              >\r\n                <MenuItem value=\"a2\">A2</MenuItem>\r\n                <MenuItem value=\"mix\">Mix</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"pH *\"\r\n              name='ph'\r\n              onChange={this.onChange}\r\n              type=\"number\"\r\n              value={ph}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"FAT *\"\r\n              name=\"fat\"\r\n              value={fat}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"SNF *\"\r\n              name=\"snf\"\r\n              value={snf}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >  \r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"Sodium Content *\"\r\n              name=\"sodium_content\"\r\n              value={sodium_content}\r\n              type=\"number\"\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={2}>\r\n            <TextField fullWidth\r\n              label=\"MBRT *\"\r\n              name=\"mbrt\"\r\n              type=\"number\"\r\n              value={mbrt}\r\n              onChange={this.onChange}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >BMC Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={bmc_receive}\r\n              name=\"bmc_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >BMC Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={bmc_dispatch}\r\n              name=\"bmc_dispatch\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >Plant Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={plant_receive}\r\n              name=\"plant_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >Plant Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={plant_dispatch}\r\n              name=\"plant_dispatch\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >WHS Received</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={whs_receive}\r\n              name=\"whs_receive\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <InputLabel className=\"required\" >WHS Dispatched</InputLabel>\r\n            <TextField fullWidth\r\n              type=\"datetime-local\"\r\n              required\r\n              onChange={this.onDateTimeChange}\r\n              value={whs_dispatch}\r\n              name=\"whs_dispatch\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >  \r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics1}\r\n                  onChange={(e, antibiotics1) => this.setState({ antibiotics1 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (B & T) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics2}\r\n                  onChange={(e, antibiotics2) => this.setState({ antibiotics2 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (Chloramphenicol) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={antibiotics3}\r\n                  onChange={(e, antibiotics3) => this.setState({ antibiotics3 })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Antibiotics (Sulphonamide) *\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3} lg={3}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch disabled\r\n                  checked={aflatoxin}\r\n                  onChange={(e, aflatoxin) => this.setState({ aflatoxin })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Aflatoxin M1 *\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container \r\n          justify=\"center\" \r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <div>\r\n              <input \r\n                type=\"file\" \r\n                id=\"milk-report-file-input\" \r\n                className=\"file-input\"\r\n                name=\"pdf\"\r\n                onChange={this.onChange}\r\n              />\r\n              <label className=\"file\" htmlFor=\"milk-report-file-input\">\r\n                <div className=\"flex middle\">\r\n                  <div className=\"icon\">\r\n                    <UploadIcon />\r\n                  </div>\r\n                  Upload Report\r\n                </div>\r\n              </label>\r\n            </div>\r\n            {filename}\r\n          </Grid>\r\n          \r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              // onClick={onSubmit}\r\n              disabled={loading}\r\n              startIcon={loading ? <CircularProgress size={12} /> : null}\r\n            >\r\n              Submit\r\n            </Button>\r\n              \r\n          </Grid>\r\n          \r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              // onClick={onSubmit}\r\n              // disabled={loading}\r\n              // startIcon={loading ? <CircularProgress size={12} /> : null}\r\n            >\r\n              Cancel\r\n            </Button>\r\n              \r\n          </Grid>\r\n          \r\n        </Grid>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ReportForm;","import { Box, Typography } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {getReport} from '../api/misc';\r\nimport {addReport} from '../api/admin';\r\nimport ReportForm from './ReportForm';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  };\r\n}\r\n\r\nclass AddReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      report: null,\r\n      loading: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    getReport()\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        report: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  onSubmit = (data) => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    addReport(data)\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        loading: false\r\n      })\r\n      alert('Done');\r\n    })\r\n    .catch(err => {\r\n      if(err.response && err.response.status === 400) {\r\n        alert(err.response.data)\r\n      }\r\n      console.log(err);\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const {loading, report} = this.state;\r\n    if(report) {\r\n      // alert(\"Already a report for today\");\r\n    }\r\n    return (\r\n      <div >\r\n        <Box m={1}>\r\n          <Typography variant=\"h4\">Add Milk Report</Typography>\r\n        </Box>\r\n        <Box m={1}>\r\n          <ReportForm onSubmit={this.onSubmit} loading={loading} />\r\n        </Box>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(AddReport);","import {API_URL , request} from '../helpers/utils';\r\nimport moment from 'moment';\r\n\r\nexport function getReport(type = 'a2', report_date = moment().format('YYYY-MM-DD')) {\r\n  report_date = moment(report_date).format('YYYY-MM-DD');\r\n  let url = `${API_URL}/misc/getReport?report_date=${report_date}&type=${type}`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}"],"sourceRoot":""}