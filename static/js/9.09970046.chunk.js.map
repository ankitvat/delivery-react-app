{"version":3,"sources":["helpers/utils.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/DriverOrderTable.js","components/ChooseOrder.js","api/driver.js"],"names":["API_URL","getCookies","cookies","document","cookie","split","data","forEach","values","request","config","axios","accessToken","userAccessToken","defaults","headers","common","initRequestAuthHeader","useEnhancedEffect","window","React","ListItem","props","ref","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","children","classes","className","componentProp","component","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_objectWithoutProperties","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","other","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","_extends","clsx","root","gutters","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","value","container","pop","withStyles","theme","display","justifyContent","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","name","MenuItem","tabIndex","_props$component","ListItemClasses","_props$role","role","tabIndexProp","undefined","typography","body1","_defineProperty","minHeight","overflow","whiteSpace","breakpoints","up","body2","memo","withRouter","history","console","log","striped","noHeader","columns","selector","sortable","cell","row","idx","address","hub","area","subarea","house_number","onRowClicked","e","push","order_id","ChooseOrder","state","phone","selectedArea","selectedSubarea","selectedHub","this","onUpdateOrdersData","driverId","url","method","getMyOrders","driver","id","then","res","loading","customers","locations","areas","subareas","hubs","filteredAreas","get","Array","from","keys","sort","a","b","localeCompare","subareasCollection","areaSubareas","Map","has","filter","item","indexOf","Loading","style","padding","marginRight","TextField","label","onChange","setState","target","FormControl","InputLabel","Select","labelId","map","Button","color","onClick","selectedDriver","showWithoutDairy","connect","setDriver","dispatch","updateOrders"],"mappings":"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","file":"static/js/9.09970046.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// export const API_URL = 'http://localhost:5000/api';\r\nexport const API_URL = 'http://192.168.40.14:5000/api';\r\n// export const API_URL = '/api';\r\n\r\nexport function getCookies() {\r\n  var x = document.cookie;\r\n  let cookies = x.split(';'); \r\n  let data = {};\r\n  cookies.forEach(cookie => {\r\n    let values = cookie.split('=');\r\n    data[values[0]] = values[1];\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction setRequestAuthHeader(accessToken) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\r\n}\r\n\r\nexport const userAccessToken = getCookies()[\"x-auth-token\"];\r\n\r\nexport function initRequestAuthHeader() {\r\n  let userAccessToken = getCookies()[\"x-auth-token\"];\r\n  if (userAccessToken) setRequestAuthHeader(userAccessToken);\r\n}\r\ninitRequestAuthHeader();\r\n\r\nexport function request(config) {\r\n  return axios.request(config);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\n\r\nfunction DriverOrderTable(props) {\r\n  \r\n  const {data, history} = props;\r\n  console.log(history);\r\n  const columns = [\r\n    {\r\n      name: 'Crate',\r\n      selector: 'crateId',\r\n      sortable: true,\r\n      width: '70px'\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      selector: 'address.hub',\r\n      width: '100px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.hub;\r\n      }\r\n    },\r\n    {\r\n      name: 'Region',\r\n      sortable: true,\r\n      selector: 'address.area',\r\n      width: '140px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.area;\r\n      }\r\n    },\r\n    {\r\n      name: 'Locality',\r\n      sortable: true,\r\n      selector: 'address.subarea',\r\n      width: '150px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.subarea;\r\n      }\r\n    },\r\n    {\r\n      name: 'House',\r\n      selector: 'address.house',\r\n      width: '200px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.house_number;\r\n      }\r\n    }\r\n  ];\r\n\r\n  console.log(\"Rerendering Table\");\r\n\r\n  return (\r\n    \r\n    <DataTable\r\n      striped={true}\r\n      noHeader\r\n      dense={true}\r\n      data={data}\r\n      columns={columns}\r\n      onRowClicked={(row, e) => {\r\n        history.push(`/${row.order_id}/deliver`)\r\n      }}\r\n    />\r\n  )\r\n};\r\n\r\nexport default React.memo(withRouter(DriverOrderTable));","import { Typography } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button, Divider, TextField } from '@material-ui/core';\r\n\r\nimport Loading from '../components/Loading';\r\nimport {getMyOrders} from '../api/driver';\r\nimport {updateOrders} from '../actions/driver.actions';\r\nimport DriverOrderTable from './DriverOrderTable';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrders(data))\r\n  };\r\n}\r\n\r\nclass ChooseOrder extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    selectedArea: 'all',\r\n    selectedSubarea: 'all',\r\n    selectedHub: 'all',\r\n  }\r\n  componentDidMount() {\r\n    let {onUpdateOrdersData, driver} = this.props;\r\n    getMyOrders(driver.id)\r\n    .then(res => {\r\n      onUpdateOrdersData(res.data);\r\n    })\r\n  }\r\n  render() {\r\n    let loading = true, data = [];\r\n    let {selectedArea, selectedHub, selectedSubarea, phone } = this.state;\r\n    let {customers, locations, areas, subareas, hubs} = this.props;\r\n\r\n    \r\n    if(selectedHub !== 'all') {\r\n      let filteredAreas = locations.get(selectedHub);\r\n      areas = Array.from(filteredAreas.keys());\r\n\r\n      areas = areas.sort((a, b) => a.localeCompare(b));\r\n      \r\n      let subareasCollection = selectedArea !== 'all' ? [filteredAreas.get(selectedArea)] : Array.from(filteredAreas.values());\r\n      subareas = [];\r\n      subareasCollection.forEach(areaSubareas => {\r\n        areaSubareas.forEach(subarea => subareas.push(subarea));\r\n      });\r\n      subareas = subareas.sort((a, b) => a.localeCompare(b));\r\n    }\r\n\r\n    if(selectedArea !== 'all') {\r\n      \r\n      let filteredAreas = new Map();\r\n      Array.from(locations.keys()).forEach(hub => {\r\n        if(locations.get(hub).has(selectedArea)) {\r\n          filteredAreas = locations.get(hub);\r\n        }\r\n      })\r\n\r\n      let subareasCollection = [filteredAreas.get(selectedArea)]\r\n      subareas = [];\r\n      subareasCollection.forEach(areaSubareas => {\r\n        areaSubareas.forEach(subarea => subareas.push(subarea));\r\n      });\r\n      subareas = subareas.sort((a, b) => a.localeCompare(b));\r\n    }\r\n\r\n    if(customers) {\r\n      loading = false;\r\n      data = Array.from(customers.values());\r\n      \r\n\r\n      data = data.filter((item) => {\r\n        if(selectedHub !== 'all') {\r\n          if(item.address.hub !== selectedHub) return false;\r\n        }\r\n        if(selectedArea !== 'all') {\r\n          if(item.address.area !== selectedArea) return false;\r\n        }\r\n        if(selectedSubarea !== 'all') {\r\n          if(item.address.subarea !== selectedSubarea) return false;\r\n        }\r\n        if(phone) {\r\n          if(item.phone.indexOf(phone) !== -1) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          loading ? \r\n          <Loading /> :\r\n          <div>\r\n            <div\r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <TextField\r\n                  value={phone}\r\n                  label=\"Phone\"\r\n                  onChange={(e) => this.setState({phone: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <FormControl>\r\n                  <InputLabel id=\"hub-filter\">Hub</InputLabel>\r\n                  <Select\r\n                    labelId=\"hub-filter\"\r\n                    style={{width: 160}}\r\n                    value={selectedHub}\r\n                    onChange={(e) => {\r\n                      let selectedHub = e.target.value;\r\n                      this.setState({selectedHub, selectedArea: 'all', selectedSubarea: 'all'})\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {hubs.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              \r\n            </div>\r\n            <div\r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n              \r\n              <div style={{marginRight: 20}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"area-filter\">Area</InputLabel>\r\n                  <Select\r\n                    labelId=\"area-filter\"\r\n                    style={{width: 150}}\r\n                    value={selectedArea}\r\n                    onChange={(e) => {\r\n                      let selectedArea = e.target.value;\r\n                      this.setState({selectedArea, selectedSubarea: 'all'})\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {areas.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              \r\n              <div >\r\n                <FormControl>\r\n                  <InputLabel id=\"subarea-filter\">Subareas</InputLabel>\r\n                  <Select\r\n                    labelId=\"subarea-filter\"\r\n                    style={{width: 150}}\r\n                    value={selectedSubarea}\r\n                    onChange={(e, b) => {\r\n                      let selectedSubarea = e.target.value;\r\n                      this.setState({selectedSubarea});\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {subareas.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  </FormControl>\r\n              </div>\r\n              \r\n            </div>\r\n            <div\r\n              className=\"flex right\"\r\n              style={{padding: 10}}\r\n            >\r\n              <div >\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      phone: \"\",\r\n                      selectedArea: 'all',\r\n                      selectedSubarea: 'all',\r\n                      selectedHub: 'all',\r\n                      selectedDriver: 'all',\r\n                      showWithoutDairy: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Clear All Filters\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <DriverOrderTable \r\n              data={data}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ChooseOrder);","import {API_URL , request} from '../helpers/utils';\r\n\r\nexport function login(data) {\r\n  let url = `${API_URL}/driver/login`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function getMyOrders(driverId) {\r\n  let url = `${API_URL}/driver/${driverId}/getMyOrders`;\r\n  return request({\r\n    url: url,\r\n    method: 'get',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}\r\n\r\nexport function confirmDelivery(data) {\r\n  let url = `${API_URL}/order/confirmDelivery`;\r\n  return request({\r\n    url: url,\r\n    method: 'post',\r\n    data,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n}"],"sourceRoot":""}