{"version":3,"sources":["components/OrderDeliveryForm.js"],"names":["tutorialSteps","label","render","onChange","component","aria-label","name","value","control","className","fullWidth","autoFocus","placeholder","type","variant","data","useStyles","makeStyles","theme","root","maxWidth","flexGrow","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","img","overflow","width","stepper","Transition","React","forwardRef","props","ref","direction","withRouter","connect","state","setDriver","classes","useTheme","useState","activeStep","setActiveStep","maxSteps","length","history","match","orders","customers","params","order_id","parseInt","orderId","order","find","item","customer","get","customer_id","fullScreen","open","TransitionComponent","position","color","edge","onClick","goBack","title","style","marginTop","padding","steps","nextButton","size","prevActiveStep","disabled","backButton","console","log"],"mappings":"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","file":"static/js/12.bde1b06e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Divider, TextField } from '@material-ui/core';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Select Delivery Type - डिलीवरी कहाँ करी',\r\n    render: (onChange) => {\r\n      return (\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup aria-label=\"delivery type\" name=\"delivery_type\">\r\n            <FormControlLabel value=\"in_hand\" control={<Radio />} label=\"In Hand Delivery - कस्टमर के हाथ में डिलीवरी की\" />\r\n            <FormControlLabel value=\"doorstep\" control={<Radio />} label=\"Doorstep Delivery - घर के गेट के बहार आर्डर रखा\" />\r\n            <FormControlLabel value=\"society_guard\" control={<Radio />} label=\"Handed over to society guard - सोसाइटी गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"tower_guard\" control={<Radio />} label=\"Handed over to tower guard - टावर गार्ड के पास आर्डर छोड़ा\" />\r\n            <FormControlLabel value=\"order_cancelled\" control={<Radio />} label=\"Order Cancelled - आर्डर कैंसिल\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    label: 'Take Photo - आर्डर की फोटो लीजिये',\r\n    render: () => (<div>\r\n    </div>)\r\n  },\r\n  {\r\n    label: 'Complete Order Delivered? - क्या आपने पूरा आर्डर डिलीवर किया?',\r\n    render: () => (<div className=\"pv-10\">\r\n      <FormControl component=\"fieldset\">\r\n        <RadioGroup aria-label=\"complete delivery\" name=\"complete_delivery\">\r\n          <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes - हाँ, मैंने पूरा आर्डर डिलीवर किया\" />\r\n          <FormControlLabel value=\"no\" control={<Radio />} label=\"No - नहीं,  पूरा आर्डर डिलीवर नहीं हुआ है\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n\r\n    </div>)\r\n  },\r\n  {\r\n    label: 'Boxes - कितने डब्बे डिलीवर करे',\r\n    render: () => (<div className=\"pv-10\">\r\n      <TextField \r\n        fullWidth\r\n        autoFocus\r\n        placeholder=\"कितने डब्बे डिलीवर करे\"\r\n        type=\"number\" \r\n        variant=\"outlined\"\r\n      />\r\n    </div>)\r\n  },\r\n  {\r\n    label: 'Milk Packets - कितने दूध के पैकेट डिलीवर करे',\r\n    render: () => (<div className=\"pv-10\">\r\n      <TextField \r\n        fullWidth\r\n        autoFocus\r\n        placeholder=\"कितने दूध के पैकेट डिलीवर करे\"\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n      />\r\n    </div>)\r\n  },\r\n  {\r\n    label: 'Review - कृपया जांचें',\r\n    render: (data) => (<div className=\"pv-10\">\r\n\r\n    </div>)\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n  stepper: {\r\n    background: 'yellow'\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction OrderDeliveryForm(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const {history, match, orders, customers} = props;\r\n  const {params} = match;\r\n  let order_id = parseInt(params.orderId);\r\n\r\n  let order = orders.find((item) => item.order_id === order_id);\r\n  let customer = customers.get(order.customer_id);\r\n\r\n  if(!customer) {\r\n    console.log(order);\r\n    return 'No Such order found';\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog \r\n        fullScreen \r\n        open\r\n        TransitionComponent={Transition}\r\n      >\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"default\"\r\n      >\r\n        <Toolbar>\r\n          <IconButton \r\n            edge=\"start\" \r\n            color=\"inherit\" \r\n            onClick={() => {\r\n              history.goBack();\r\n            }} \r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {customer.name}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{marginTop: 60, padding: 10}}>\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n          {tutorialSteps[activeStep].label}\r\n        </Typography>\r\n        <Divider />\r\n        <div>\r\n          {tutorialSteps[activeStep].render()}\r\n        </div>\r\n      </div>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"bottom\"\r\n        variant=\"progress\"\r\n        activeStep={activeStep}\r\n        // className={classes.stepper}\r\n        color=\"default\"\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Previous\r\n          </Button>\r\n        }\r\n      />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps\r\n)(OrderDeliveryForm));\r\n"],"sourceRoot":""}