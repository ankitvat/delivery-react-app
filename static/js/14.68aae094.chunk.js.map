{"version":3,"sources":["components/DriverOrderTable.js","components/ChooseOrder.js"],"names":["React","memo","withRouter","props","data","history","id","map","item","order_id","crate_id","name","phone","address","hub","area","subarea","house_number","Card","style","margin","CardHeader","onClick","delivered","alert","push","title","className","Avatar","background","marginLeft","Divider","CardContent","paddingTop","paddingBottom","href","fontWeight","ChooseOrder","state","selectedArea","selectedSubarea","selectedHub","showDelivered","this","onUpdateOrdersData","driver","getMyOrders","then","res","loading","customers","locations","areas","subareas","hubs","filteredAreas","get","Array","from","keys","sort","a","b","localeCompare","subareasCollection","values","forEach","areaSubareas","Map","has","filter","indexOf","toLowerCase","delivery","deliver_date","Loading","padding","marginRight","TextField","value","label","onChange","e","setState","target","FormControl","InputLabel","Select","labelId","width","MenuItem","FormControlLabel","control","Switch","checked","color","Button","selectedDriver","showWithoutDairy","Component","connect","setDriver","dispatch","updateOrders"],"mappings":"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","file":"static/js/14.68aae094.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from \"react-router\";\r\n// import DataTable from \"react-data-table-component\";\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Card from '@material-ui/core/Card';\r\n// import Link from 'react-router-dom';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction DriverOrderTable(props) {\r\n  \r\n  const {data, history} = props;\r\n\r\n  return (\r\n    <div id=\"order cards\">\r\n      {data.map(item => {\r\n        const {order_id, crate_id, name, phone, address} = item;\r\n        const {hub, area, subarea, house_number} = address;\r\n        return (\r\n          <Card\r\n            style={{\r\n              margin: 10\r\n            }}\r\n          >\r\n            <CardHeader\r\n              onClick={() => {\r\n                if(item.delivered) {\r\n                  alert('Already delivered');\r\n                  return;\r\n                }\r\n                history.push(`/${order_id}/deliver`)\r\n              }}\r\n              title={ \r\n                <div>\r\n                  <div className=\"flex middle\">\r\n                    <Avatar style={{background: 'red'}}>\r\n                      {crate_id}\r\n                    </Avatar>\r\n                    <div style={{marginLeft: 10}}>\r\n                      {name}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <div style={{paddingTop: 10, paddingBottom: 10}}>\r\n                <a href={`tel:+91${phone}`} className=\"flex middle\">\r\n                  <PhoneIcon /> {phone}\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <span style={{fontWeight: 'bold'}}>\r\n                  Address\r\n                </span> {house_number}, {subarea}, {area}, {hub}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(withRouter(DriverOrderTable));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport Loading from '../components/Loading';\r\nimport {getMyOrders} from '../api/driver';\r\nimport {updateOrders} from '../actions/driver.actions';\r\nimport DriverOrderTable from './DriverOrderTable';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setDriver} = state;\r\n  return {\r\n    ...setDriver\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrders(data))\r\n  };\r\n}\r\n\r\nclass ChooseOrder extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    selectedArea: 'all',\r\n    selectedSubarea: 'all',\r\n    selectedHub: 'all',\r\n    showDelivered: false\r\n  }\r\n  componentDidMount() {\r\n    let {onUpdateOrdersData, driver} = this.props;\r\n    getMyOrders(driver.id)\r\n    .then(res => {\r\n      onUpdateOrdersData(res.data);\r\n    })\r\n  }\r\n  render() {\r\n    let loading = true, data = [];\r\n    let {selectedArea, selectedHub, selectedSubarea, phone, showDelivered } = this.state;\r\n    let {customers, locations, areas, subareas, hubs} = this.props;\r\n\r\n    \r\n    if(selectedHub !== 'all') {\r\n      let filteredAreas = locations.get(selectedHub);\r\n      areas = Array.from(filteredAreas.keys());\r\n\r\n      areas = areas.sort((a, b) => a.localeCompare(b));\r\n      \r\n      let subareasCollection = selectedArea !== 'all' ? [filteredAreas.get(selectedArea)] : Array.from(filteredAreas.values());\r\n      subareas = [];\r\n      subareasCollection.forEach(areaSubareas => {\r\n        areaSubareas.forEach(subarea => subareas.push(subarea));\r\n      });\r\n      subareas = subareas.sort((a, b) => a.localeCompare(b));\r\n    }\r\n\r\n    if(selectedArea !== 'all') {\r\n      \r\n      let filteredAreas = new Map();\r\n      Array.from(locations.keys()).forEach(hub => {\r\n        if(locations.get(hub).has(selectedArea)) {\r\n          filteredAreas = locations.get(hub);\r\n        }\r\n      })\r\n\r\n      let subareasCollection = [filteredAreas.get(selectedArea)]\r\n      subareas = [];\r\n      subareasCollection.forEach(areaSubareas => {\r\n        areaSubareas.forEach(subarea => subareas.push(subarea));\r\n      });\r\n      subareas = subareas.sort((a, b) => a.localeCompare(b));\r\n    }\r\n\r\n    if(customers) {\r\n      loading = false;\r\n      data = Array.from(customers.values());\r\n      \r\n\r\n      data = data.filter((item) => {\r\n        if(selectedHub !== 'all') {\r\n          if(item.address.hub !== selectedHub) return false;\r\n        }\r\n        if(selectedArea !== 'all') {\r\n          if(item.address.area !== selectedArea) return false;\r\n        }\r\n        if(selectedSubarea !== 'all') {\r\n          if(item.address.subarea !== selectedSubarea) return false;\r\n        }\r\n        if(phone) {\r\n          if(item.phone.indexOf(phone) !== -1) return true;\r\n          if(item.name.toLowerCase().indexOf(phone.toLowerCase()) !== -1) return true;\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      data = data.filter((item) => {\r\n        if(showDelivered) {\r\n          if(item.delivery.deliver_date) return true;\r\n          return false;\r\n        } else {\r\n          if(item.delivery.deliver_date) return false;\r\n          return true;\r\n        }\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          loading ? \r\n          <Loading /> :\r\n          <div>\r\n            <div\r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n\r\n              <div style={{marginRight: 20}}>\r\n                <TextField\r\n                  value={phone}\r\n                  label=\"Phone or Name\"\r\n                  onChange={(e) => this.setState({phone: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <FormControl>\r\n                  <InputLabel id=\"hub-filter\">Hub</InputLabel>\r\n                  <Select\r\n                    labelId=\"hub-filter\"\r\n                    style={{width: 160}}\r\n                    value={selectedHub}\r\n                    onChange={(e) => {\r\n                      let selectedHub = e.target.value;\r\n                      this.setState({selectedHub, selectedArea: 'all', selectedSubarea: 'all'})\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {hubs.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              \r\n            </div>\r\n            <div\r\n              className=\"flex middle\"\r\n              style={{padding: 10}}\r\n            >\r\n              \r\n              <div style={{marginRight: 20}}>\r\n                <FormControl>\r\n                  <InputLabel id=\"area-filter\">Area</InputLabel>\r\n                  <Select\r\n                    labelId=\"area-filter\"\r\n                    style={{width: 150}}\r\n                    value={selectedArea}\r\n                    onChange={(e) => {\r\n                      let selectedArea = e.target.value;\r\n                      this.setState({selectedArea, selectedSubarea: 'all'})\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {areas.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              \r\n              <div >\r\n                <FormControl>\r\n                  <InputLabel id=\"subarea-filter\">Subareas</InputLabel>\r\n                  <Select\r\n                    labelId=\"subarea-filter\"\r\n                    style={{width: 150}}\r\n                    value={selectedSubarea}\r\n                    onChange={(e, b) => {\r\n                      let selectedSubarea = e.target.value;\r\n                      this.setState({selectedSubarea});\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {subareas.map(item => (\r\n                      <MenuItem value={item} key={item}>{item}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  </FormControl>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n            <div\r\n              className=\"flex space-bw\"\r\n              style={{padding: 10}}\r\n            >\r\n              <div>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={showDelivered}\r\n                      onChange={(e, showDelivered) => this.setState({showDelivered})}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Delivered\"\r\n                />\r\n              </div>\r\n              <div >\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      phone: \"\",\r\n                      selectedArea: 'all',\r\n                      selectedSubarea: 'all',\r\n                      selectedHub: 'all',\r\n                      selectedDriver: 'all',\r\n                      showWithoutDairy: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Clear All Filters\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <DriverOrderTable \r\n              data={data}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ChooseOrder);"],"sourceRoot":""}