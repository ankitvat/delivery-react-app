{"version":3,"sources":["helpers/exportCSV.js","../node_modules/@material-ui/icons/CloudDownload.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/icons/ArrowDownward.js","components/CustomerSheet.jsx"],"names":["downloadCSV","array","filename","link","document","createElement","rows","forEach","row","join","push","csv","match","setAttribute","encodeURI","click","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","d","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","CustomerSheet","props","updateState","state","setState","selectedRows","createCrateNumbers","creatingCrate","customers","orderCrateIds","item","order_id","crateId","crate_id","updateCrateId","then","res","window","location","reload","columns","name","selector","sortable","width","cell","idx","address","hub","products","phone","categories","entries","allProducts","category","product","style","textAlign","id","map","product_id","total","unit","quantity","className","toString","exportData","data","from","values","filter","customer","onlyDairy","exportCSV","Date","toLocaleDateString","loading","this","console","log","sortIcon","actions","variant","color","startIcon","size","disabled","marginRight","onClick","Component","connect","setAdmin","dispatch","onUpdateOrdersData","updateOrdersData"],"mappings":"oHAkBeA,IAlBf,SAAqBC,GAAiC,IAA1BC,EAAyB,uDAAd,aAC/BC,EAAOC,SAASC,cAAc,KAChCC,EAAO,GACXL,EAAMM,SAAQ,SAAAC,GACZA,EAAMA,EAAIC,KAAK,KACfH,EAAKI,KAAKF,MAEZ,IAAIG,EAAML,EAAKG,KAAK,MACT,MAAPE,IAECA,EAAIC,MAAM,sBACbD,EAAG,sCAAkCA,IAGvCR,EAAKU,aAAa,OAAQC,UAAUH,IACpCR,EAAKU,aAAa,WAAYX,GAC9BC,EAAKY,W,iCCdP,IAAIC,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAMnB,cAAc,OAAQ,CACnFqB,EAAG,uLACD,iBAEJL,EAAQE,QAAUE,G,+ECfH,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYd,OAAOS,GAAjE,CACA,IAAIM,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKZ,EAAII,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKxB,KAAK6B,EAAGjB,QAETO,GAAKK,EAAKS,SAAWd,GAH8CM,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBN,EAAKC,IAAM,OAAAgB,EAAA,GAA2BjB,EAAKC,IGLjF,WACb,MAAM,IAAIiB,UAAU,6IHIgF,K,iCIHtG,IAAI9B,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,KAElBM,SAAuBC,EAAMnB,cAAc,OAAQ,CACnFqB,EAAG,mEACD,iBAEJL,EAAQE,QAAUE,G,iOCMZsB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAEC,aAAcF,EAAME,gBAPnB,EASnBC,mBAAqB,WACnB,EAAKF,SAAS,CACZG,eAAe,IAFQ,IAIpBC,EAAc,EAAKP,MAAnBO,UACDC,EAAgB,GASpBD,EAAUhD,SAAQ,SAAAkD,GAAS,IAClBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,QACjBH,EAAc9C,KAAK,CAACgD,WAAUE,SAAUD,OAE1CE,YAAc,CAACL,kBACdM,MAAK,SAAAC,GACJC,OAAOC,SAASC,aA7BD,EAgCnBC,QAAU,CACR,CACEC,KAAM,QACNC,SAAU,WACVC,UAAU,EACVC,MAAO,QAET,CACEH,KAAM,MACNE,UAAU,EACVC,MAAO,QACPC,KAAM,SAAChE,EAAKiE,GAEV,OADgBjE,EAAXkE,QACUC,MAGnB,CACEP,KAAM,OACNC,SAAU,OACVC,UAAU,EACVC,MAAO,SAGT,CACEH,KAAM,QACNC,SAAU,QACVC,UAAU,EACVC,MAAO,SAET,CACEH,KAAM,UACNC,SAAU,WACVC,UAAU,EACVE,KAAM,SAAChE,EAAKiE,GAAS,IACZG,EAAmBpE,EAAnBoE,SAAUC,EAASrE,EAATqE,MACXC,EAAa3D,OAAO4D,QAAQH,GAC9BI,EAAc,GAOlB,OANAF,EAAWvE,SAAQ,YAAwB,IAAD,mBAArB0E,EAAqB,KAAX3D,EAAW,KACxB,UAAb2D,GACD3D,EAAMf,SAAQ,SAAA2E,GAAO,OAAIF,EAAYtE,KAAKwE,SAK5C,wBAAOC,MAAO,CAACZ,MAAO,OAAQa,UAAW,QAASC,GAAG,uBAArD,UACE,gCACA,+BACE,sCACA,uCACA,0CAGF,gCAEEL,EAAYM,KAAI,SAAAJ,GAAY,IACnBK,EAAqCL,EAArCK,WAAYC,EAAyBN,EAAzBM,MAAOC,EAAkBP,EAAlBO,KAAMC,EAAYR,EAAZQ,SAC1BtB,EAAOc,EAAQA,QACrB,OACE,+BACE,6BAAKd,IACL,qBAAIuB,UAAU,qBAAd,UAAoCH,EAApC,IAA4CC,KAC5C,oBAAIE,UAAU,qBAAd,SAAoCD,MAH7Bb,EAAMe,WAAaL,EAAWK,uBA1FpC,EAwGnBC,WAAa,WAAO,IACbtC,EAAc,EAAKP,MAAnBO,UACDuC,EAAOhE,MAAMiE,KAAKxC,EAAUyC,UAChCF,EAAOA,EAAKG,QAAO,SAAAC,GAAQ,OAA4B,IAAvBA,EAASC,aAEzC,IAAI7F,EAAO,CACT,CAAC,QAAS,MAAO,OAAQ,QAAS,UAAW,QAAS,QAExDwF,EAAKvF,SAAQ,SAAA2F,GAAa,IACjBtB,EAAmBsB,EAAnBtB,SAAUC,EAASqB,EAATrB,MACXC,EAAa3D,OAAO4D,QAAQH,GAC9BI,EAAc,GAClBF,EAAWvE,SAAQ,YAAwB,IAAD,mBAArB0E,EAAqB,KAAX3D,EAAW,KACxB,UAAb2D,GACD3D,EAAMf,SAAQ,SAAA2E,GAAO,OAAIF,EAAYtE,KAAKwE,SAG9CF,EAAYzE,SAAQ,SAAC2E,EAASrD,GAC5B,GAAS,IAANA,EAAS,CAAC,IACH2D,EAAyBN,EAAzBM,MAAOC,EAAkBP,EAAlBO,KAAMC,EAAYR,EAAZQ,SACjBlF,EAAM,CACR0F,EAASvC,QADD,UACauC,EAASxB,QAAQC,KAD9B,UACwCuB,EAAS9B,MADjD,UAC4DS,GAD5D,UACuEK,EAAQA,SAD/E,UAC6FM,EAD7F,YACsGC,GADtG,UACiHC,IAE3HpF,EAAKI,KAAKF,OACL,CAAC,IACEgF,EAAyBN,EAAzBM,MAAOC,EAAkBP,EAAlBO,KAAMC,EAAYR,EAAZQ,SACjBlF,EAAM,CACR,GAAI,GAAI,GAAI,GADJ,UACU0E,EAAQA,SADlB,UACgCM,EADhC,YACyCC,GADzC,UACoDC,IAE9DpF,EAAKI,KAAKF,UAIhB4F,YAAU9F,EAAD,4BAA2B,IAAI+F,MAAOC,qBAAtC,UAvIT,EAAKpD,MAAQ,CACXqD,SAAS,GAHM,E,qDA4IjB,IAAIA,GAAU,EAEThD,EAAciD,KAAKxD,MAAnBO,UACAD,EAAkBkD,KAAKtD,MAAvBI,cAEDwC,EAAO,GASX,OAPGvC,IACDgD,GAAU,EACVE,QAAQC,IAAInD,GAEZuC,GADAA,EAAOhE,MAAMiE,KAAKxC,EAAUyC,WAChBC,QAAO,SAAAC,GAAQ,OAA4B,IAAvBA,EAASC,cAIzC,8BAEMI,EACA,cAAC,IAAD,IACA,qBAAKlB,GAAG,uBAAR,SACE,cAAC,IAAD,CACES,KAAMA,EACN3B,QAASqC,KAAKrC,QACdwC,SAAU,cAAC,IAAD,IACVC,QACE,gCACE,cAAC,IAAD,CACEC,QAAQ,WACRC,MAAM,UACNC,UAEEzD,EAAgB,cAAC,IAAD,CAAkB0D,KAAM,KAAS,KAEnDC,SAAU3D,EACV6B,MAAO,CACL+B,YAAa,GAEfC,QAASX,KAAKnD,mBAXhB,kCAgBA,cAAC,IAAD,CACE0D,UAAW,cAAC,IAAD,IACXD,MAAM,YACND,QAAQ,WACRM,QAASX,KAAKX,WAJhB,yC,GAvLQuB,aA4MbC,uBAxNf,SAAyBnE,GAAQ,IAC1BoE,EAAYpE,EAAZoE,SACL,OAAO,eACFA,MAIP,SAA4BC,GAC1B,MAAO,CACLC,mBAAoB,SAAC1B,GAAD,OAAUyB,EAASE,YAAiB3B,QA+M7CuB,CAGbtE","file":"static/js/8.f94f3048.chunk.js","sourcesContent":["function downloadCSV(array, filename = 'export.csv') {\r\n  const link = document.createElement('a');\r\n  let rows = [];\r\n  array.forEach(row => {\r\n    row = row.join(',');\r\n    rows.push(row);\r\n  });\r\n  let csv = rows.join('\\n');\r\n  if (csv == null) return;\r\n\r\n  if (!csv.match(/^data:text\\/csv/i)) {\r\n    csv = `data:text/csv;charset=utf-8,${csv}`;\r\n  }\r\n\r\n  link.setAttribute('href', encodeURI(csv));\r\n  link.setAttribute('download', filename);\r\n  link.click();\r\n}\r\nexport default downloadCSV;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\n\nexports.default = _default;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from \"react-data-table-component\";\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport exportCSV from '../helpers/exportCSV';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {updateOrdersData} from '../actions/admin.actions';\r\nimport {updateCrateId} from '../api/admin';\r\nimport Loading from './Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onUpdateOrdersData: (data) => dispatch(updateOrdersData(data))\r\n  };\r\n}\r\nclass CustomerSheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n  }\r\n  updateState = state => {\r\n    this.setState({ selectedRows: state.selectedRows });\r\n  }\r\n  createCrateNumbers = () => {\r\n    this.setState({\r\n      creatingCrate: true\r\n    });\r\n    let {customers } = this.props;\r\n    let orderCrateIds = [\r\n      /*\r\n      {\r\n        order_id: \r\n        crate_id: \r\n      } \r\n      */\r\n    ];\r\n\r\n    customers.forEach(item => {\r\n      const {order_id, crateId} = item;\r\n      orderCrateIds.push({order_id, crate_id: crateId});\r\n    });\r\n    updateCrateId({orderCrateIds})\r\n    .then(res => {\r\n      window.location.reload();\r\n    })\r\n  }\r\n  columns = [\r\n    {\r\n      name: 'Crate',\r\n      selector: 'crate_id',\r\n      sortable: true,\r\n      width: '90px'\r\n    },\r\n    {\r\n      name: 'Hub',\r\n      sortable: true,\r\n      width: '100px',\r\n      cell: (row, idx) => {\r\n        let {address} = row;\r\n        return address.hub;\r\n      }\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'name',\r\n      sortable: true,\r\n      width: '200px'\r\n      \r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'phone',\r\n      sortable: true,\r\n      width: '140px'\r\n    },\r\n    {\r\n      name: 'Product',\r\n      selector: 'products',\r\n      sortable: false,\r\n      cell: (row, idx) => {\r\n        const {products, phone} = row;\r\n        const categories = Object.entries(products);\r\n        let allProducts = [];\r\n        categories.forEach(([category, value]) => {\r\n          if(category !== 'Dairy') {\r\n            value.forEach(product => allProducts.push(product));\r\n          }\r\n        });\r\n\r\n        return (\r\n          <table style={{width: '100%', textAlign: 'left'}} id=\"customer-sheet-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th >Total</th>\r\n              <th >Qty</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n              allProducts.map(product => {\r\n                const {product_id, total, unit, quantity} = product;\r\n                const name = product.product;\r\n                return (\r\n                  <tr key={phone.toString() + product_id.toString()}>\r\n                    <td>{name}</td>\r\n                    <td className=\"fixed-width-column\">{total} {unit}</td>\r\n                    <td className=\"fixed-width-column\">{quantity}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n  exportData = () => {\r\n    let {customers } = this.props;\r\n    let data = Array.from(customers.values());\r\n    data = data.filter(customer => (customer.onlyDairy === false));\r\n\r\n    let rows = [\r\n      ['Crate', 'Hub', 'Name', 'Phone', 'Product', 'Total', 'Qty'],\r\n    ];\r\n    data.forEach(customer => {\r\n      const {products, phone} = customer;\r\n      const categories = Object.entries(products);\r\n      let allProducts = [];\r\n      categories.forEach(([category, value]) => {\r\n        if(category !== 'Dairy') {\r\n          value.forEach(product => allProducts.push(product));\r\n        }\r\n      });\r\n      allProducts.forEach((product, i) => {\r\n        if(i === 0) {\r\n          const { total, unit, quantity} = product;\r\n          let row = [\r\n            customer.crateId, `${customer.address.hub}`, `${customer.name}`, `${phone}`,`${product.product}`, `${total} ${unit}`, `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        } else {\r\n          const { total, unit, quantity} = product;\r\n          let row = [\r\n            '', '', '', '',`${product.product}`, `${total} ${unit}`, `${quantity}`\r\n          ];\r\n          rows.push(row);\r\n        }\r\n      });\r\n    });\r\n    exportCSV(rows, `Customer Sheet - ${new Date().toLocaleDateString()}.csv`);\r\n  }\r\n  render() {\r\n    let loading = true;\r\n\r\n    let {customers } = this.props;\r\n    let {creatingCrate } = this.state;\r\n    \r\n    let data = [];\r\n\r\n    if(customers) {\r\n      loading = false;\r\n      console.log(customers);\r\n      data = Array.from(customers.values());\r\n      data = data.filter(customer => (customer.onlyDairy === false))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            loading?\r\n            <Loading /> :\r\n            <div id=\"customer-sheet-table\">\r\n              <DataTable\r\n                data={data}\r\n                columns={this.columns}\r\n                sortIcon={<ArrowDownward />}\r\n                actions={\r\n                  <div>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      startIcon={\r\n                        // <CircularProgress size={12} />\r\n                        creatingCrate ? <CircularProgress size={12} /> : null\r\n                      }\r\n                      disabled={creatingCrate}\r\n                      style={{\r\n                        marginRight: 4\r\n                      }}\r\n                      onClick={this.createCrateNumbers}\r\n                    >\r\n                      Create Crate Numbers\r\n                    </Button>\r\n\r\n                    <Button \r\n                      startIcon={<DownloadIcon />}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                      onClick={this.exportData}\r\n                    >\r\n                      Download Excel\r\n                    </Button>\r\n                  </div>\r\n                }\r\n                // onSelectedRowsChange={this.updateState}\r\n                // selectableRows\r\n              />\r\n            </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CustomerSheet);"],"sourceRoot":""}