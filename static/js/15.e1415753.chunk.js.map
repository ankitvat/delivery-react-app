{"version":3,"sources":["components/ProductSheet.jsx"],"names":["CustomerSheet","props","columns","name","selector","sortable","cell","row","idx","crates","unit","product","style","width","textAlign","id","map","crate","crateId","total","quantity","className","toString","state","loading","this","customers","productsCollection","data","console","log","Array","from","values","Component","connect","setAdmin"],"mappings":"4NAaMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,QAAU,CACR,CACEC,KAAM,UACNC,SAAU,UACVC,UAAU,GAEZ,CACEF,KAAM,SACNE,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAS,IACZC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QAErB,OACE,wBAAOC,MAAO,CAACC,MAAO,OAAQC,UAAW,QAASC,GAAG,uBAArD,UACE,gCACA,+BACE,uCACA,uCACA,0CAGF,gCAEEN,EAAOO,KAAI,SAAAC,GAAU,IACZC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SACvB,OACE,+BACE,oBAAIC,UAAU,qBAAd,SAAoCH,IACpC,qBAAIG,UAAU,qBAAd,UAAoCF,EAApC,IAA4CT,KAC5C,oBAAIW,UAAU,qBAAd,SAAoCD,MAH7BT,EAAUO,EAAQI,uBA9BzC,EAAKC,MAAQ,CACXC,SAAS,GAHM,E,qDAgDjB,IAAIA,GAAU,EADP,EAG+BC,KAAKxB,MAAtCyB,EAHE,EAGFA,UAAWC,EAHT,EAGSA,mBAEZC,EAAO,GAQX,OAPGF,IACDG,QAAQC,IAAIH,GACZH,GAAU,EACVI,EAAOG,MAAMC,KAAKL,EAAmBM,WAKrC,8BAEMT,EACA,cAAC,IAAD,IACA,8BACE,cAAC,IAAD,CACEI,KAAMA,EACN1B,QAASuB,KAAKvB,kB,GArEFgC,aAiFbC,uBAxFf,SAAyBZ,GAAQ,IAC1Ba,EAAYb,EAAZa,SACL,OAAO,eACFA,KAqFQD,CAEbnC","file":"static/js/15.e1415753.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nimport Loading from './Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n  let {setAdmin} = state;\r\n  return {\r\n    ...setAdmin\r\n  };\r\n}\r\n\r\nclass CustomerSheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n  }\r\n  columns = [\r\n    {\r\n      name: 'Product',\r\n      selector: 'product',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Crates',\r\n      sortable: false,\r\n      cell: (row, idx) => {\r\n        const {crates, unit, product} = row;\r\n\r\n        return (\r\n          <table style={{width: '100%', textAlign: 'left'}} id=\"customer-sheet-table\">\r\n            <thead>\r\n            <tr>\r\n              <th>Crate</th>\r\n              <th >Total</th>\r\n              <th >Qty</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n              crates.map(crate => {\r\n                const {crateId, total, quantity} = crate;\r\n                return (\r\n                  <tr key={product + crateId.toString()}>\r\n                    <td className=\"fixed-width-column\">{crateId}</td>\r\n                    <td className=\"fixed-width-column\">{total} {unit}</td>\r\n                    <td className=\"fixed-width-column\">{quantity}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n  \r\n  render() {\r\n    let loading = true;\r\n\r\n    let {customers, productsCollection} = this.props;\r\n    \r\n    let data = [];\r\n    if(customers) {\r\n      console.log(productsCollection);\r\n      loading = false;\r\n      data = Array.from(productsCollection.values());\r\n      // data = data.filter(customer => (customer.onlyDairy === false))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            loading?\r\n            <Loading /> :\r\n            <div>\r\n              <DataTable\r\n                data={data}\r\n                columns={this.columns}\r\n                // onSelectedRowsChange={this.updateState}\r\n                // selectableRows\r\n              />\r\n            </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(CustomerSheet);"],"sourceRoot":""}